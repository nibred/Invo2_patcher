# name: .NET

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet-version: 8.0.x
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build
#       run: dotnet build -c Release --no-restore
#     - name: Test
#       run: dotnet test --no-build --verbosity normal


name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-release:

    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Envrionment
      id: setup_env
      run: |
            echo "Setup Envrionment Variables for Workflow"
            echo "Working Path: ${Env:GITHUB_WORKSPACE}"
            $slnPath = (Get-ChildItem -Include *.sln -File -Recurse).fullname
            $relName = "${{ github.ref }}".Split("/")
            $repoName = "${{ github.repository }}".Split("/")
            $relVersion = "${{ github.ref }}".Split("-")
            echo "Solution File Path: ${slnPath}"
            echo "SOLUTION_PATH=${slnPath}" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
            echo "Release Name: $($relName[-1])"
            echo "RELEASE_NAME=$($relName[-1])" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
            echo "Repo Name: $($repoName[-1])"
            echo "REPO_NAME=$($repoName[-1])" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
            echo "Release Version: $($relVersion[-1])"
            echo "RELEASE_VERSION=$($relVersion[-1])" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Publish
      run: dotnet publish -c Release --no-build --output ./publish
      
    - name: Archive release files
      run: Compress-Archive -Path ./publish/* -DestinationPath ./Invo2_patcher.zip
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{github.ref_name}}
        release_name: ${{ env.REPO_NAME }}
        draft: false
        prerelease: false

    - name: Upload build artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Invo2_patcher.zip
        asset_name: ${{ env.REPO_NAME }}
        asset_content_type: application/zip
